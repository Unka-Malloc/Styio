// RUN: /root/styio/styio %s | /usr/bin/FileCheck %s

code <- @("code.txt")

map = []

iloop = 0

ilast = |code| - 1

[0..ilast] >> #(l) ?= '[' => {
  iloop += 1
  
  
  success = \f\

  count = 0

  [0..ilast] >> #(r) ?= ']' => {
    count += 1
          
    ?(count == iloop) 
    \t\ {
      map[+: (l, r)]

      success = \t\

      ^^^^^^^^^^^^
    }
  }
}

/*
  CHECK:      Read File {
  CHECK-NEXT: || Var: id { code }
  CHECK-NEXT: || Val: Path { "code.txt" }}
  CHECK-NEXT: Binding (Flexible) {
  CHECK-NEXT: || Var: id { map }
  CHECK-NEXT: || Val: Empty { }}
  CHECK-NEXT: Binding (Flexible) {
  CHECK-NEXT: || Var: id { iloop }
  CHECK-NEXT: || Val: int { 0 }}
  CHECK-NEXT: Binding (Flexible) {
  CHECK-NEXT: || Var: id { ilast }
  CHECK-NEXT: || Val: Subtract {
  CHECK-NEXT: |--| LHS: SizeOf { id { code } }
  CHECK-NEXT: |--| RHS: int { 1 }}}
  CHECK-NEXT: Loop {
  CHECK-NEXT: || Forward (Fill -> If Equal -> Run) {
  CHECK-NEXT: |--| Fill {
  CHECK-NEXT: |----| id { l }}
  CHECK-NEXT: |--| Equal To? { char { '[' } }
  CHECK-NEXT: |--| Run: Block {
  CHECK-NEXT: |----| Add (Inc.) {
  CHECK-NEXT: |------| LHS: id { iloop }
  CHECK-NEXT: |------| RHS: int { 1 }}
  CHECK-NEXT: |----| Binding (Flexible) {
  CHECK-NEXT: |------| Var: id { success }
  CHECK-NEXT: |------| Val: True { }}
  CHECK-NEXT: |----| Binding (Flexible) {
  CHECK-NEXT: |------| Var: id { count }
  CHECK-NEXT: |------| Val: int { 0 }}
  CHECK-NEXT: |----| Loop {
  CHECK-NEXT: |------| Forward (Fill -> If Equal -> Run) {
  CHECK-NEXT: |--------| Fill {
  CHECK-NEXT: |----------| id { r }}
  CHECK-NEXT: |--------| Equal To? { char { ']' } }
  CHECK-NEXT: |--------| Run: Block {
  CHECK-NEXT: |----------| Add (Inc.) {
  CHECK-NEXT: |------------| LHS: id { count }
  CHECK-NEXT: |------------| RHS: int { 1 }}
  CHECK-NEXT: |----------| Conditionals (Only True) {
  CHECK-NEXT: |------------| Condition { LHS: id { count } | Op: <EQ> | RHS: id { iloop } }
  CHECK-NEXT: |------------| Then: Block {
  CHECK-NEXT: |--------------| Append {
  CHECK-NEXT: |----------------| id { map }
  CHECK-NEXT: |----------------| Value: Tuple (
  CHECK-NEXT: |--------------------| id { l }
  CHECK-NEXT: |--------------------| id { r })}
  CHECK-NEXT: |--------------| Binding (Flexible) {
  CHECK-NEXT: |----------------| Var: id { success }
  CHECK-NEXT: |----------------| Val: True { }}
  CHECK-NEXT: |--------------| Break { }}}}}}}}}
*/